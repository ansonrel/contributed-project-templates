# To add a module to an orchestrator, follow the instructions from:
# https://renkulab.io/gitlab/omnibenchmark/orchestrator 
# And set the following values in this file: 
# OMNIBENCHMARK_NAME: name of the omnibenchmark that hosts the orchestrator (should be in the 'omnibenchmark' namespace)
# ORCHESTRATOR_NAME: name of the orchestrator 
# USERNAME: renkulab/ gitlab username which has a valid $CI_PUSH_TOKEN (api scope) in the orchestrator
# USERNAME_MAIL: mail of the above username
# TRIPLESTORE_NAME: name of the triplestore on penticton to send the triples to
#----------------------------------------------------------------------------------------------------------

variables:
  GIT_STRATEGY: fetch
  GIT_SSL_NO_VERIFY: "true"
  GIT_LFS_SKIP_SMUDGE: 1
  PROJECT_SCRIPT: src/run_workflow.py

stages:
  - build
  - update

image_build:
  stage: build
  image: docker:stable
  rules:
    - if: '$CI_PIPELINE_SOURCE != "pipeline" && $CI_UPSTREAM_PROJECT != "omnibenchmark/OMNIBENCHMARK_NAME/ORCHESTRATOR_NAME"'
  before_script:
    - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN http://$CI_REGISTRY
  script: |
    CI_COMMIT_SHA_7=$(echo $CI_COMMIT_SHA | cut -c1-7)
    docker build --tag $CI_REGISTRY_IMAGE:$CI_COMMIT_SHA_7 .
    docker push $CI_REGISTRY_IMAGE:$CI_COMMIT_SHA_7

update_build:
  stage: build
  image: docker:stable
  rules:
    - if: '$CI_PIPELINE_SOURCE == "pipeline" && $CI_UPSTREAM_PROJECT == "omnibenchmark/OMNIBENCHMARK_NAME/ORCHESTRATOR_NAME"'
  before_script:
    - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN http://$CI_REGISTRY
  script: |
    docker build --tag $CI_REGISTRY_IMAGE:$CI_COMMIT_SHORT_SHA .
    docker push $CI_REGISTRY_IMAGE:$CI_COMMIT_SHORT_SHA

run_udpate:
  stage: update
  image: 
    name: $CI_REGISTRY_IMAGE:$CI_COMMIT_SHORT_SHA
    entrypoint: [""]
  rules:
    - if: '$CI_PIPELINE_SOURCE == "pipeline" && $CI_UPSTREAM_PROJECT == "omnibenchmark/OMNIBENCHMARK_NAME/ORCHESTRATOR_NAME"'
  before_script:
    - git config --global user.name "USERNAME"
    - git config --global user.email "USERNAME_MAIL"
    - git config --global --add safe.directory /builds/gitlab/{{__namespace__}}/{{__sanitized_project_name__}}
    - url_host=`git remote get-url origin | sed -e "s/https:\/\/gitlab-ci-token:.*@//g"`
    - cd /tmp/
    - git clone "https://oauth2:${CI_PUSH_TOKEN}@${url_host}"
    - cd ${CI_PROJECT_NAME}
    - chmod +x ./$PROJECT_SCRIPT
    - git lfs install --local
  script:
    - python $PROJECT_SCRIPT
