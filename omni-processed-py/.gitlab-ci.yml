
variables:
  GIT_STRATEGY: fetch
  GIT_SSL_NO_VERIFY: "true"
  GIT_LFS_SKIP_SMUDGE: 1
  PROJECT_SCRIPT: src/run_workflow.py

stages:
  - build
  - update

image_build:
  stage: build
  image: docker:stable
  rules:
    - if: '$CI_PIPELINE_SOURCE != "pipeline"' 
  before_script:
    - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN http://$CI_REGISTRY
  script: |
    CI_COMMIT_SHA_7=$(echo $CI_COMMIT_SHA | cut -c1-7)
    docker build --tag $CI_REGISTRY_IMAGE:$CI_COMMIT_SHA_7 .
    docker push $CI_REGISTRY_IMAGE:$CI_COMMIT_SHA_7
    docker tag $CI_REGISTRY_IMAGE:$CI_COMMIT_SHA_7 $CI_REGISTRY_IMAGE:$CI_COMMIT_SHA
    docker push $CI_REGISTRY_IMAGE:$CI_COMMIT_SHA 

run_udpate:
  stage: update
  image: 
    name: $CI_REGISTRY_IMAGE:$CI_COMMIT_SHA
    entrypoint: [""]
  rules:
    - if: '$CI_PIPELINE_SOURCE == "pipeline"' 
  before_script:
    - git config --global user.name "${GITLAB_USER_NAME}"
    - git config --global user.email "${GITLAB_USER_EMAIL}"
    - git config --global --add safe.directory /builds/gitlab/${CI_PROJECT_PATH}
    - url_host=`git remote get-url origin | sed -e "s/https:\/\/gitlab-ci-token:.*@//g"`
    - cd /tmp/
    - git clone "https://oauth2:${CI_PUSH_TOKEN}@${url_host}"
    - cd ${CI_PROJECT_NAME}
    - chmod +x ./$PROJECT_SCRIPT
    - git lfs install --local
  script:
    - python $PROJECT_SCRIPT
    - 'renku graph export --full --strict > graph.json'
    - 'curl -u  "omni_update:${OMNI_UPDATE_TOKEN}" -i -X  POST "${TRIPLESTORE_URL}" -H "Content-Type:application/ld+json" -d "@graph.json"'
